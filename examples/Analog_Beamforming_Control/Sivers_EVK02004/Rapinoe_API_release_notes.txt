Rapinoe API 0.1.49 (20240201)
=============================

MBDRV:
* Updated MBDRV .dll and .so files which include the following bug fix.
  - Result returned by spi.wr/set/clr/tgl/wrrd was sometimes prefixed with a 0xfffc.

Rapinoe API 0.1.48 (20240131)
=============================

REGISTER MAP R5:
* Updated register map document for R5 correcting freq_sync_cfg field positions. (PB51)
* Generated new HDF5 file reg_map_r5.h5 based on Register map PB51.

GUI:
* Bugfix: In RX Gain and TX Gain tabs changes of values sometimes did not take effect.

Rapinoe API 0.1.47 (20240117)
=============================

HOST:
* Bugfix: Corrected issue with start-up of EVK with BFM02803 (RFM12) which occured right after power-up.

Rapinoe API 0.1.46 (20240102)
=============================

INIT R5:
	* Update bias settings. bb_rx_bias_adj:0x44, bf_tx_biasref_trim:0x363, com_bias_tx_trim:0x242422 (20231222).

RAM R5:
	* Updated beambooks for 24GHz to 30GHz (20231122).

RAM:
	* Added Beambooks for 37,41,42 and 43 GHz (20231220).

SYNTH R5:
	* Default SD order for synth setup changed from 2 to 3.
	* For SD order 3: pll_phase_adj:0xff, pll_i_leak:pll_i_chp+2 and pll_spi_leak_en:1 (20231221).
	* The 'set' functions sets sm_vtune_cal based on current chip temperature (20231204).

FIR R5:
	* Added FIR filter API.
      Example:
      # Set up FIR filter coefficients.
      # The coefficients are either given as actual register values 0 to 0x7fff or as filter coefficients 0 to 0.5 .
      # Number of filter taps are order+1
      host.chip.fir.setup(rap0, order=4, coeff=[0.5, 0.5, 0.25, 0.25, 0.25])

      # Enable FIR filter.
      host.chip.fir.enable(rap0)

      # Read filtered data. Returns a dictionary with two elements 'fir_data_out' and 'trunc_error'.
      host.chip.fir.get_data(rap0)

RX_LVL_DET R5:
	* First implementation of RX level Detector API. (Not tested)
      The API consists of the follwoing functions:
      - host.chip.rx.lvl_det.set_wait_time(devs, wait_time=0x7f)
      - host.chip.rx.lvl_det.det_setup(devs, pol, cnt_th, cfg=WAIT_SLEEP|WAIT_SX|WAIT_TX|WAIT_RX|DETECT_SLEEP|DETECT_SX|DETECT_TX|DETECT_RX)
      - host.chip.rx.lvl_det.det_enable(devs, pol)
      - host.chip.rx.lvl_det.det_disable(devs, pol)
      - host.chip.rx.lvl_det.com_setup(devs, pol, dac_cal, lvl_ctrl, lvl_lo)
      - host.chip.rx.lvl_det.com_enable(devs, pol)
      - host.chip.rx.lvl_det.com_disable(devs, pol)
      - host.chip.rx.lvl_det.com_status(devs)

TX_DCO_PDET R5:
	* Added TX power detector assisted LO leakage calibration.
      Example:
      After setting up and enabling TX in IF mode and vertical polarization.
      host.chip.tx.dco_det.calibrate(rap0, 'if', 'v')

GUI:
    * Added option to LO leakage calibrate using TX power detectors.
    * Fixed bug when updating RX Gain table from RX Gain tab.
    * For R5, default SD order in synth setup is changed to 3.




Rapinoe API 0.1.45 (20231121)
=============================

GENERAL:
	* Recommended to use PYthon 3.9 and later.
	  Installation script support for Python 3.8 is removed.

INIT (R5), SYNTH (R5):
	* sm_pol bit in sm_en is set to 1 with initialization of SYNTH and VCO. (Nov 17, 2023)
	* Updated Synthesizer settings. (Nov 16, 2023)

RAM:
	* Added beambooks for 38, 39 and 40GHz for TRB03901.
	* Updated beambooks for 24, 25, 26, 27, 28 and 29GHz. (For TRB02801 prior to R5).
	* Added function get_index which searches a RAM table for specific attributes and returns index or indexes.
	  Example:
	  >>host.chip.ram.get_index('25GHz', {'AZIMUTH':-15})
	  Reading RAM file C:\dev\api\chip/../config/ram/ram_r5.xml ...
	  ['2']

GUI:
	* GUI: Bugfix: Fixed cause of error message when pressing Reset button when using Rapinoe prior to R5.


Rapinoe API 0.1.44 (20231031)
=============================

GENERAL:
    * Added option for reg_state function to generate simple CSV file containing register name and value.
	  Example:
	  host.spi.reg_state(rap0, save_csv=True, csv_file_name='reg_state.csv')

	* Added reg_state_wr function which reads a CSV file in the same format generated by reg_state and writes
	  the register values to the chip.
	  Example:
	  host.spi.reg_state_wr(rap0, csv_file_name='reg_state.csv')

	* Both reg_state and reg_state_wr use directory "config/save" as default if no path is given in csv_file_name .

GUI:
	* Added menu items for saving register values to CSV file and loading register values from CSV file.
	  Menu option are found under "Register save/load" (top left corner) as "Save to CSV" and "Load from CSV".

Rapinoe API 0.1.43 (20231026)
=============================

GENERAL:
    * host.spi.reg_state function has been re-written for reduced execution time. (5ms instead of 400ms)
      Possibility of specifying register group has been removed.
      Usage example:
      host.spi.reg_state(rap0)   # Returns complete register settings as a dictionary.

Rapinoe API 0.1.42 (20231023)
=============================

GENERAL:
    * Added function host.spi.reg_state for retriving register values as a dictionary.
      A complete register setting list takes approximately 400ms
      Example:
      host.spi.reg_state(rap0)          # Returns complete register settings.
      host.spi.reg_state(rap0, 'ADC')   # Returns register settings for ADC group.

AMUX R5:
    * Added workarounds for RX filter DCO measurement.

ADC R5:
    * Number of ADC reading repetitions default reduced from 10 to 1.

RX_DCO R5:
    * Number of ADC readings used for calibration is set to 4.

TX_DCO R5:
    * Number of ADC readings used for calibration is set to 4.

TEMP R5:
    * temp.get src argument has default 'BG' which selects 'BG Sense' source for temperature reading.
      Example:
      host.chip.temp.get(rap0)

    * NOTE: Linear function for conversion of 'BG Sense' voltage to temperature is preliminary and
            will be update in later releases.

GUI R5:
    * Main temperature plot is 'BG Sense' voltage converted to Celcius as default.
    * RCU initialization button added to Init frame in the GUI.

Rapinoe API 0.1.41 (20230929)
=============================

GENERAL:
    * Added Rapinoe R5 support.

GUI:
    * TX and RX Gain view values are updated automatically when switching to tab.

CONFIG, CONNECT, EVK:
    * Added support for BFM02803.

INSTALL:
    * Fixed Linux install scripts.

MBDRV:
    * More flexible path detection for MBDRV lib.

Rapinoe API 0.1.40 (20230708)
=============================

HOST:
    * Added function to adjust PLL and CHIP reference frequencies based on RF frequency offset input.

SYNTH:
    * Added function to calculate reference frequency offset based on RF frequency offset.

MB2 PLL:
    * Added functions to adjust PLL reference in.

Rapinoe API 0.1.39 (20230511)
=============================

GENERAL:
    * New installation method. Instead of using Windows installer MSI file the installation is done by unpacking a zip file.
      This will give more flexibility regarding the location of the installation. For example installation on a USD drive or
      an external hard drive.
      It will also be possible to have serveral versions/instances of the installation on the same computer.

    * Linux support is added for x86_64 platforms. This version has been tested on an x86_64 based system with Ubuntu 20.04
	  and Python 3.9.16 and Python 3.8.10.
      Note: Currently the communication between the host PC and the EVK/TRB RFIC when running under Linux is significantly slower compared to Windows.

    * Included libraries:
      - MBDRV 0.1.12
      - LIBMPSSE 1.1.12

    * Installation of required Python packages is done by running the following scripts located in a new 'install' directory.
      - .\install.cmd   (Linux)
      - ./install.sh    (Windows)

TEST:
    * Updated tx_setup.py and rx_setup.py scripts. Located under 'tests' directory.

CHIP, TX, RX:
    * Added functions for enabling and disabling TX and RX overrides (which are enabled as default).
      These functions clear and set the whole group of override registers for TX and/or RX.
      For example:
      host.chip.override_mode(rap0, False)	# Clears all override registers for both TX and RX
      host.chip.override_mode(rap0, True)	# Sets all override registers for both TX and RX

      host.chip.tx.override_mode(rap0, False)	# Clears all override registers for TX
      host.chip.tx.override_mode(rap0, True)	# Sets all override registers for TX

      host.chip.rx.override_mode(rap0, False)	# Clears all override registers for RX
      host.chip.rx.override_mode(rap0, True)	# Sets all override registers for TX

INIT:
    - Init TX does not clear the RX specific bits in com_bias_trim register.
    - Init RX does not clear the TX specific bits in com_bias_trim register.

GUI:
    - Override On/Off switches are added to TX and RX sections of the GUI.


Rapinoe API 0.1.38 (20230207)
=============================

GENERAL:
    * No Python 3.7 support.
    * Use Python 3.8 or Python 3.9

MBDRV:
    * MBDRV is now integrated with the API software to eliminate Platform DLL and Platform PyExt software installations.
    * Included MBDRV.dll version in this release is 0.1.11.

GUI:
    * Reference clock frequency is set at synth set.
    * Actual reference clock frequency is shown in the GUI synth section.
    * Actual RF frequency is shown in the GUI synth section.

PWR, MISC:
    * Updated code to fix compatibility issue with Python 3.8.

Rapinoe API 0.1.37 (20221207)
=============================

SYNTH:
    * Changed setup-value of sm_dac for 28 GHz (0.8 -> 0.725)
    * synth.set loads the best beambook for the specified frequency (if not already loaded) to RAM.

RAM:
    * Default RAM file is read at initialization.

CHIP:
    * RAM instance is passed to RX and TX at instantiation to be used for loading gain tables.
    * RAM instance is passed to SYNTH at instantiation to be used for loading beambooks.

TX:
    * setup loads TX gain tables. Added functions for selecting and reading TX gain table IDs.
    * Set default BB_TX_CTUNE to 0x44 for IF mode and 0xCC for BB mode.

RX:
    * setup loads RX gain tables. Added functions for selecting and reading RX gain table IDs.

RAM_FILE:
    * Added function find_tables_by_type which returns a list of table IDs of requested type.

RAM_FILE:
    * Added function find_index_by_tag. This is mainly used for finding beam index which corresponds to a specific azimuth.

GUI:
    * Added TX and RX gain tabs. Moved TX and TX RAM views to Extended mode.
    * Added PWR and MISC on/off section to Main->General.
    * Register field view write button turns red if field value is changed and turns green after button is pressed.
    * Increased RAM file selector window height.

REG_MAP:
    * Updated register map to 0.1 (based on PA171).

RX RAM:
    * Updated RX gain tables. Received on 2022-11-25.

RAM:
    * Updated beambooks. Received on 2022-11-22.

TESTS:
    * Added test scripts for tx and rx setup (tx_setup.py and rx_setup.py found in the test folder)

EEPROM:
    * Added get_config and set_config functions (for reading and writing TLVs to EEPROM via the FTDI chip).
    * Changed the example eeprom.xml content.

I2C:
    * Added get_config and set_config functions (for reading and writing TLVs to EEPROM via the TRB I2C interface).

RAPVALX,RAPVALT,DBM1:
    * Added EEPROM address and details.


Rapinoe API 0.1.36 (20221020)
=============================

RX_DCO:
    * Bugfix: bb_rx_en_dco is restored correctly after calibration.

HOST:
    * Workarounds are now applied after all resets have been performed.

GPIO:
    * Added functions for GPIO group value and direction change.

TX_DCO:
    * Bug fix: Restoring the used RX branch in x-pol case was incomplete.
    * In tx_dco.calibrate rx_pol argument is replaced with boolean cross_pol.

GUI:
    * TX DCO calibration field rx pol is replaced with cross polarization.
    * Removed latitude field from TX and RX setup frames. Always uses WE.

CTRL:
    * Added send(devs, cmd=None, state=None, index=None, sync=1).
    * Corrected application of data to ctrl-signals.
    * Updated send(dev, mode, cmd, state, index, sync=1) to pick configuration from motherboard.
    * Added methods to set and get mode:
      - set_mode(devs, mode[, enable=1])
      - get_mode(devs)
      Both of them return a dict {'mode':<mode>, 'enable':<enable>}
    * Added improved checking wrt parameters to set_mode and send methods calls.

EVK:
    * Updated detection of motherboards.
    * Added 'rapvalx' as equivalent to 'rapvalbsp' for bsp-option.

MB1:
    * Added support for CTRL interface.

MB2:
    * Added CTRL-interface configuration.
    * Updated CTRL configurations.

DBMB:
    * Added support for CTRL interface.

CONNECT:
    * Added 'rapvalx' as equivalent to 'rapvalbsp' for bsp-option.


Rapinoe API 0.1.35 (20221011)
=============================

	INSTALLATION:
	* Python scipy module is installed by installation scripts.

	RAPVALBSP:
	* Added drive (=0) of ftdi gpio(26) for rapvalbsp (rapvalx/rapvalota) (FTDI bus D = 0x00070007).

	TEMP:
	* Added method cal_get(dev, [srcs]) to get current settings for temp calculation.

	TEMP, TEMP_MEAS:
	* Removed debug prints.


Rapinoe API 0.1.34 (20221011)
=============================

	HOST, EVK:
	* Added support to set SPI clock speed (option -i|--spi). Default speed is 10 MHz.
	  If rapvalt is specified as -b|--bsp, then default is 1 MHz, unless option -i|--spi is given, which overrides -b||--bsp.

	CONNECT:
	* Added printout of SPI clock speed.

	RAPVALT:
	*Added new default for FTDI bus D: 0x20272027, i.e FTDI drives pins 26 (=0) and 29 (=1) which are dig_gpio_2_A/B.

Rapinoe API 0.1.33 (20221011)
=============================

	EVK:
	* Added -b|--bsp rapvalt to support rapvalTile.

	CONNECT:
	* Added rapvalt definitions.

	DBMB (BSP):
	* Changed HW_OBJECTS to inital support for pwr, instead of pll.
	* SPI_MOSI required to be 1 at start, possibly due to levelshifters on DBMB.

	COMMON:
	* fhex updated to converts dict-values to hex by default.
	* Added Linear regression functions linregr and linregr_plot.
	* Linear regression now can do ordinary LMMSE and ODR, using linregress and ODR from scipy.

	BSP/RAPVALT:
	* New BSP for Rapval Tile.

	ADC:
	* Corrected precision-handling

	MB2:
	* Updated default values for bus C and D.
	* SPI_MOSI required to be 1 at start, possibly due to levelshifters on MB2.

	TEMP_CAL:
	* Added temp_meas to handle temperature measurement data and provide calibration functions.
	* Added calibration handling to temp.

	AMUX:
	* Corrected mult-factor for BB RX V/H I/Q PGA1/2 DC from 1.0 -> 2.0 .

	EVK_LOGGER:
	* EVK_LOGGER: evk.info changed to a rotating file with max 30MB size and up to 3 backups.

	TX_DCO:
	* Improvements in TX DCO calibration function after further testing.

	GUI:
	* Button text color in Main tab changes to Green indicating the setting has been sent
	  or Red indication the setting is not sent yet.


Rapinoe API 0.1.32 (20220921)
=============================

	MB2:
	* Updated default GPIO drives and values for FTDI.

	TX_DCO:
	* Bugfix, RX LNA V was not turned off during calibration.

Rapinoe API 0.1.31 (20220919)
=============================

	EVK, HOST, CHIP:
	* Added command-line option of not having any bsp (BFM/RFM) connected to the MB; -b none | --bsp none.

	INIT, CHIP:
	* Moved functionality in chip.py to init.py.
	  Added possibility to define new init-definitions trough chip.init (or chip._init.set).
	  chip.init_get (chip._init.get) now returns a format that is of a format that can be used
	  for input to chip.init (chip._init.set).

Rapinoe API 0.1.30 (20220915)
=============================

	GUI:
	* Removed Gain index from TX DCO calibration frame.
	* GUI locks during TX DCO calibration.

	TX_DCO:
	* TX RF gain during calibration is set to max without using gain index.

	Platform MB2:
	* Corrected FTDI initial values.

Rapinoe API 0.1.29 (20220912)
=============================

	HOST/EVK:
	* Added support for new mother board: DBMB and associated BFM/RFM: DBM1.

	HOST:
	* Bug fix: set_vcm was always setting VCM to 600mV

	TX_DCO:
	* Updated TX DCO calibration function to fix stability issues and better LO supression.

	RX_DCO:
	* Changed ADC reps value to 10.

	GUI:
	* Added new tab for initialization, synth setup, TX and RX setup.
	  NOTE: Currently there is a bug which causes the GUI to be nonresponsive during TX DCO calibration.

	RAM XML:
	* Added TX and RX borsight beams for 24GHz to 30GHz frequencies.
	  NOTE: To view a list of available RAM tables execute the command:
	        host.chip.ram.file_info()
            Each RAM table is selectable using its ID.
            The new beams added in this release have IDs BS24GHz, BS25GHz, BS26GHz, BS27GHz, BS28GHz, BS29GHz and BS30GHz.
            To load a specific RAM table execute the following command:
            host.chip.ram.fill(rap0, 'BS26GHz') # The second parameter is the RAM table ID (Boresight 26GHz)

Rapinoe API 0.1.28 (20220714)
=============================

	SYNTH:
	* Added 100 ms delay between reset and start of PLL SM, and 50 ms delay after start of PLL SM before checking status.

The initial versions of RX DCO and TX DCO calibration are included in this release but they should still be concidered
as 'Work in progress' since there has been limited testing and they require further optimization.

	RX_DCO:
	* Added function for performing RX DCO calibration.
	  Usage: Setup RX and use the following command to perform an RX_DCO calibration,
	  host.chip.rx.dco.calibrate(<rap object>, <polarization>, <rx gain index>)
	  for example:
	  host.chip.rx.dco.calibrate(rap0, 'H', 0)

	TX_DCO:
	* Added function for performing TX DCO calibration.
	  Usage: Setup TX and use the following command to perform a TX_DCO calibration,
	  host.chip.tx.dco.calibrate(<rap object>, <mode>, <polarization>, <tx gain index>)
	  for example:
	  host.chip.tx.dco.calibrate(rap0, 'BB', 'H', 0)

Rapinoe API 0.1.27 (20220628)
=============================

	SYNTH:
	* SYNTH: Added pll_config to status as chp_setting.

	GUI:
	* Bug fix: Corrected issue in ADC tab with some sources.


Rapinoe API 0.1.26 (20220627)
=============================

	GPIO:
	* Added host-level GPIO functionality.

	SYNTH:
	* Added PLL lock retry to set(). PLL lock retry count default is 10.

	INIT:
	* VALIDATION setup added.
	  Note that only pll_en and sm_clk_config are set to the recommended validation settings.
	  More settings can be added as other settings are requested.

	RAM:
	* Added ram.xml file example located in api/config/ram.
	  This file contains TX RAM, RX RAM and BF RAM tables. See example file for details.
	* Added fill command to which reads a RAM file (default ram.xml) and writes the contents to RAM.
	* Added file_info command which shows information about a RAM file including individual tables. (default ram.xml)

	EVK:
	* Added -x (--xgui) argument to enables extended GUI features (Demo tabs).
	  This works in the same way as -g (--gui) except that Demo tabs will be visible.
	  To open a GUI using the open_gui command follow the below syntax:
	  host.open_gui(rap0, extended=True)

	GUI:
	* Bug fix: Shows all 256 rows in BF RAM view.
	* Added RX Demo tab added.
	* Updated TX and RX demo tabs.
	* Load file buttons are added to TX RAM, RX RAM and BF RAM tabs to be able to write RAM content from a RAM file (e.g ram.xml)
	* Possible to select gain index from TX RAM and RX RAM tabs.
	* Possible to select current and next beam index from BF RAM tab.

	CHIP:
	* Changed the way rx and tx modules are imported to prevent conflict with other software.
	  (issue with gimbal sw used for beambook generation)


Rapinoe API 0.1.25 (20220609)
=============================

	GUI: 
	* Bug fix: Corrected update of RAM table view after Read button is pressed.
	* Bug fix: Corrected update of BF RAM table view after Read button is pressed.
	* TX RAM tab content is updated when tab becomes visible.

	DEMO:
	* Corrected issues with setup-file execution.
	* setup-file printout removed.

	EVK:
	* Added -g,--gui argument and associated handling. 
	  Option -g,--gui can take zero or more arguments:
	    -g,--gui               : Open GUI for all connected rapX
	    -g,--gui rapAll        : Open GUI for all connected rapX
	    -g,--gui rapX          : Open GUI for rapX only
	    -g,--gui rapX rapY ... : Open GUIs for rapX, rapY, and so on.
	  Updated test file handling:
	    Check if file exists at location specified, in current directory (.) or ./tests.
	    Addition of .py as suffix of test file (if needed).

Rapinoe API 0.1.24 (20220608)
=============================

	PWR/MISC:
	* Bug fix: which registers read for on, off and status.

	TX, RX:
	* Bug fix: Corrected incorrect indentation causing settings to NOT be done.

	RAM:
	* Added set,clr and tgl-commands.
	* Added possibility to specify antenna element position to affect with data.

	SD:
	* cfg_wr: Any configuration-settings with value None are not updated in the configuration registers.

	SYNTH:
	* Added default sd_order= 2 in setup.

	GUI:
	* Added Demo tab to GUI for quick setting changes for demo purposes.

	INIT:
	* Updated bf_tx_biasref_trim to 0x663.


Rapinoe API 0.1.23 (20220518)
=============================

	GUI:
	* Bug fix: Corrected TX and RX RAM write function where incorrect polarization was used.
	* Buf fix: Some temperature plots were not disabled using the associated checkbox.
	* Temperature polling for plots are disabled at startup.

	ADF4150:
	* Included register-settings in settings.

	EVK, HOST:
	* Added printout of SW components MB_DLL, MB_PYEXT and API at first connection.

	PWR, MISC:
	* printit-parameter added to status.

	ADF4150, MISC:
	* Added indentation-handling.

	HOST:
	* Added versions-method summarizing MB_DLL, MB and HOST-versions.

	ADF4150:
	* Added default configuration of MB2 PLL and associated functions:
		- pll.setup(setting=dict|setting=None)
		- pll.settings contains all settings.
		- pll.wr(addr,data|data)
		- pll.status() reads PLL LD from I/O-expander (misc).

	COMMON:
	* Added functions for arithemtic and logic shifts as well as shift combined with a bit mask.
	* Added function to print dictionary.

	PLATFORM:
	* Initial states of GPIO pins are specified in platform files.

	GUI:
	* Made editing field for BF RAM compact view wider so the while value is visible.

	EVK_LOGGER:
	* Fixed logging issues including converting rap object address conversion to short format e.g. rap0 ...

Rapinoe API 0.1.22 (20220505)
=============================
	CHIP, CHIP_INFO, HOST, SPI:
	* Added workaround for Issue#94; SPI set/clr/tgl commands could occassionally fail.

	CHIP_INFO:
	* Workaround-taggs for Issue#12, #66, #87 and #94 added.

	RX:
	* Corrected setup, gain and beam functions.

	TX:
	* Corrected setup function.

	INIT:
	* Updated RX and TX inits.

	CHIP:
	* Corrected chip init.


Rapinoe API 0.1.21 (20220504)
=============================
	HOST,EVK:
	* Updated MB detection and handling of host (MB1 and MB2) initialisations, when SPI communication to chips fail at initial connection.

	CONNECT:
	* Updated default pin-config for SPI-group (0x8fdb8fdb -> 0x8fbb8fbb, i.e MEAS_1V8 is changed into input and SPI_CS_N_REF to output.

	MB2 MISC:
	* Renamed ‘dump’ command to ‘status’ (as in MB2 PWR).

	CHIP_INFO:
	* Default reference frequency is 245.76e6 for both 28 GHz and 39 GHz versions of Rapinoe.

	TX:
	* Added setup, gain and beam functions for TX.

	RX:
	* Added setup, gain and beam functions for RX.

	TRX:
	* Added mode function.

	CHIP:
	* Added TX, RX and TRX instances giving gain, beam and mode switching/setting functionality.

	CHIP_INFO:
	* Added TO2 chip_ids.
	* Issue#12 workaround-tag added for chips prior to TO2

	RCU:
	* Updated naming of functions.

	PWR, MISC, PCA6107:
	* Corrected use of board_id to communicate with I2C devices.

	CHIP_INFO, INIT, CHIP, HOST:
	* Added default init of VCC High enables after reset and during 'host.chip.init(rap0)'.


Rapinoe API 0.1.20 (20220425)
=============================
	General:
	* Bug fix: Corrected problem with detection and setup for MB1 platform.

	MODSTORE:
	* Bug fix: Fixed modstore.save.


Rapinoe API 0.1.19 (20220425)
=============================
	EVK_LOGGER:
	* Bug fix: evk_logger instance is now created early to avoid exception when software is used with 
	  validation platform.

	SYNTH:
	* synth.status method now returns additional information.

	REF_CLK:
	* Bug fix: Corrected multi-device reference clocks.

	CHIP_INFO:
	* Bug fix: Corrected default reference frequency for Rapinoe 39 GHz Alt (chip ID 0x12612106).

	PCA6107:
	* Added multi-device handling.

	MB2 PWR:
	* Added 'on', 'off' and 'dump' methods.

	MB2 MISC:
	* Added 'on', 'off' and 'dump' methods.

	BSP:
	* BSP and motherboard configuration definitions are now moved to this package.

	MB2 PLL:
	* Base functionality has been added.


Rapinoe API 0.1.18 (20220404)
=============================
	SYNTH_ADC:
	* Updated calculation of sm_clk_config.

	SYNTH:
	* 'status' and 'set' functions now deliver frequency lock information.
	* Print-outs are now logged.

	INIT:
	* Print-outs are now logged.

	CHIP_INFO:
	* Print-outs can now be enabled or disabled using 'printit' argument in all functions.

	CHIP:
	* Print-outs can now be enabled or disabled using 'printit' argument in all functions.

	I2C:
	* Added initial implementation of I2C communication using SPI.

	GUI:
	* Re-designed TX and RX RAM tabs.
	* Added BF RAM tab.

Rapinoe API 0.1.17 (20220325)
=============================
	SYNTH:
	* Fractional handling added.
	* Support for different reference clocks frequencies added.

	CHIP:
	* Function get_num_devs which returns the number of detected Rapinoe devices has been added.

	EVK_LOGGER:
	* Bug fix: evk_logger function call logging did not work with other Rapinoe objects than rap0.

	GUI:
	* Bug fix: Corrected issue with register field view which was introduced in 0.1.16
	* Bug fix: Correctd issue with temperature retrieval which was introduced in 0.1.16
	* TX RAM and RX RAM tabs with three different views (Compact, Field and Byte) added.
	  Note that window refresh is slow due to large number of GUI components. This issue should be
	  fixed in the next release.
	* Added possibility to call open_gui with a list of Rapinoe objects.
	  For example: host.open_gui([rap0, rap1])


Rapinoe API 0.1.16 (20220315)
=============================
	RAM:
	* dump responds with dict containing: {'ram':<ram_name>, 'format':<data format>, 0: [<data>], 1: ...., <last row>: [<last row data]} .

	CHIP:
	* Chip information separated out into own class (Chip_info) to allow usage at block- and subblock-level.
	  SPI/REGISTER: Type of register included, to allow testing based on register type. Call-function example:
	  host.spi.type(rap0,'chip_id')
	  host.spi.type(rap0,'bist_config','bist_sel_in')

	ADC:
	* Corrected handling of multiple devices in get_data.
	* Added get as alias to get_data.

	TEMP:
	* The sources to be measured by dump can now be specified when calling dump: srcs='all'|['<src1>',...,'<srcN'].



Rapinoe API 0.1.15 (20220304)
=============================
	HOST:
	* Rx BB VCM is set to 600 mV at instantiation of host.

	AMUX:
	* AMUX mult for VTUNE_REF, VCO_AMP and VTUNE_SET restored to 3.0.
	* AMUX offs for VTUNE_REF, VCO_AMP and VTUNE_SET restored to True.

	LOG:
	* Bug fix: Docstrings were not shown for logged functions.
	* Bug fix: Logged functions with keyword arguments caused error and were not logged correctly.

	GUI:
	* TX_RAM, RX_RAM and BF_RAM tabs are removed from the Register tab view.
	* Temperature values are shown with "°C" instead of "deg. C".



Rapinoe API 0.1.14 (20220225)
=============================
	AMUX:
	* Added source-definition dict, including multiplier/scalefactor
	* Updated mult-factor for VTUNE_SET, VCO_AMP and VTUNE_REF
	* Added methods to control output on AMUX-pins:
		port(rapX,'out'|'in'|'off')
		pins(rapX,'out'|'in'|'off')
	
	ADC:
	* Bug fix: get_data improved to minimise risk of getting incorrect samples.
	  Read of ADC sample is now based on abs-diff from average of a number of samples (default 10).
	* Updated ADC data output options: .get_data(rapX,'<src>','volt'|'dec'|'twoscomp'|'raw')

	
	GUI:
	* Arrow up/down can be used for incrementing/decrementing register field values
	* Temperature tab updated to handle source selection
	* Temperature plot limit (red curve instead of blue) increased to 100.

	TEMP:
	* Initial release



Rapinoe API 0.1.13 (20220215)
=============================
	GUI:
	* ADC tab and functionality added
	* Temperature tab updated to receive actual data from ADC and Temp classes
	* Bug fix: Register window is now informed when field view has changed register value
	* Bug fix: Corrected call to Temp.get from GuiData
	
	SPI:
	* Added field-name-based wr, wrrd, set, clr, tgl functionality
	
	ADC:
	* Added sweep-functions based on DAC, to characterised ADC.
	* Added ADC data output options: .get_data(rapX,'<src>','volt'|'dec'|'raw')
	
	ADC DAC:
	* Methods .set and .get updated with parameter repr to allow input in different formats:
	  .set(rapX,<val>,'binoffs'|'volt'|'dec')
	  .get(rapX,'binoffs'|'volt'|'dec')
	  Default is 'binoffs'.

	LOG:
	* Bug fix: evk_logger.log_call sometimes did not show correct exception cause
	* evk_logger.evk_logger.log_info

	COMMON:
	* Added conversion functions for 2's comp, binoffs and volt to/from decimal.


Rapinoe API 0.1.12 (20220208)
=============================
	ADC:
	* Added get_data as primary function to retrieve ADC-data.
	* ADC data handling updated
	
	GUI:
	* Bug fix: Warning message was shown if GUI was closed before viewing temperature tab
	* Register Tabs sorted



Rapinoe API 0.1.11 (20220131)
=============================
	COMMON:
	* New function: str2int - for conversion of strings into integers. Supports list of string conversion.
   
	EVK:
	* Updated args:
		-f, --fref changed into -r, --fref
	* New args:
		-f, --flo - Used for setting LO-frequency on command line
	
	LOG:
	* Updated log-pattern to include rapX
	
	REGISTER:
	* Added register descriptions extracted from register map (reg_map.h5)

	HOST:
	* Added possibility to load/save rapX configurations (bspload, bspsave)
	* GUI-functionality added (open_gui(rapX))
	
	CHIP:
	* RAM-handling added

	GUI:
	* Initial release
	* Register handling included
	
	SYNTH:
	* Initial unused SD modulator handling
	* Added instance of ref_clk
	* Added instance of synth_adc
   	* New function in synth_adc: init_clks - for initialising Synth ADC clocks based on reference clock frequency
	* Updated dump function
	
	REF_CLK:
	* Support for multiple Rapinoes with individual reference-clocks added
	
	ADC:
	* Function run renamed to start
	* Function dump added

	RAM:
	* RAM-handling added
	* New functions: rd, wr, wrrd, dump and dump_wr
   


Rapinoe API 0.1.10 (20220119)
=============================
	LOG:
	* Corrected search-pattern in log_call-function



Rapinoe API 0.1.9 (20220118)
============================
	HOST:
	* Logging-functionality added at host-level



Rapinoe API 0.1.8 (20220117)
============================
	SPI:
	* Corrected multi-address handling in rd, wrrd, wr, set, clr, tgl



Rapinoe API 0.1.7 (20220114)
============================
	LOG:
	* Logging-handling introduced
	
	CHIP:
	* New init-handling introduced.
	* Init of CHIP, SYNTH and AMUX updated
	* Logging instantiated
	
	ADC:
	* Handling improved
	
	SYNTH:
	* BP's Integer mode code included
	
	RCU
	* No functionality yet, only instance



Rapinoe API 0.1.6 (20211126)
============================
	* Changed version numer to 0.1.6 due to unofficial "release" with same version number as 0.1.5



Rapinoe API 0.1.5 (20211125)
============================
	* Added possibility to run evk/host from any directory.
	* Added synth adc support.
	* Moved register map into chip directory.
	* Added a way of detecting absolute path of register map file
	* Added init-functionality to blocks.
	* Added support to SPI-access list of chips.
	* Initial basic ADC-functionality
	* Added possibility to run scripts under directory tests
	* Added possibility to access more than one chip.
	* Several changes wrt hierarchy of code



Rapinoe API 0.1.4 (20211109)
============================
	* Restructure of hierarchy in code.
	Hierarchy now is:
	evk
	 |
	host
	 |
	chip
	 |
	block
	 |
	subblock
	
	The actual Rapinoe API is at chip and downwards.
	Host adds functionality specific for the Host (i.e MB1, MB2, DBMB ...).
	It includes reset-handling, potential power-control, etc. This level of code
	is intended to handle the surroundings of the chip.
	Evk instantiates a host and adds an interface for altering parameters to host and chip
	from command line.



Rapinoe API 0.1.3 (20211026)
============================
First internal release includes:
	* Register access functionality
	* Initial Amux-implementation
	* MB1 connect functionality
	
	
